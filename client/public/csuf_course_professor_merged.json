[
  {
    "First Last":"Allen Holliday",
    "Course":"CPSC 131",
    "Total Students":71,
    "A":13,
    "B":22,
    "C":23,
    "D":5,
    "F":8,
    "Avg GPA":2.4,
    "A-F Average":2.4,
    "A-F Median":2.25,
    "A-F Mode":3.5,
    "A-F Standard Deviation":1.25,
    "Rating":null,
    "Difficulty":null,
    "Would Take Again %":null,
    "Course Name":"Data Structures",
    "Units":"3",
    "Description":"Classical data structures: vector, linked list, stack, queue, binary search tree, and graph representations. Worst-case analysis, amortized analysis, and big-O notation. Object-oriented and recursive implementation of data structures. Self-resizing vectors and self-balancing trees. Empirical performance measurement. Typically Offered: Fall\/Spring",
    "Prerequisite":"CPSC 121\u00a0or sufficient score on the Computer Science Placement Exam.",
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Anand Panangadan",
    "Course":"CPSC 131",
    "Total Students":64,
    "A":14,
    "B":27,
    "C":13,
    "D":5,
    "F":5,
    "Avg GPA":2.64,
    "A-F Average":2.64,
    "A-F Median":3.0,
    "A-F Mode":3.0,
    "A-F Standard Deviation":1.16,
    "Rating":4.9,
    "Difficulty":3.2,
    "Would Take Again %":100.0,
    "Course Name":"Data Structures",
    "Units":"3",
    "Description":"Classical data structures: vector, linked list, stack, queue, binary search tree, and graph representations. Worst-case analysis, amortized analysis, and big-O notation. Object-oriented and recursive implementation of data structures. Self-resizing vectors and self-balancing trees. Empirical performance measurement. Typically Offered: Fall\/Spring",
    "Prerequisite":"CPSC 121\u00a0or sufficient score on the Computer Science Placement Exam.",
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Anand Panangadan",
    "Course":"CPSC 375",
    "Total Students":44,
    "A":19,
    "B":19,
    "C":5,
    "D":0,
    "F":1,
    "Avg GPA":3.25,
    "A-F Average":3.25,
    "A-F Median":3.0,
    "A-F Mode":null,
    "A-F Standard Deviation":0.84,
    "Rating":4.9,
    "Difficulty":3.2,
    "Would Take Again %":100.0,
    "Course Name":"Introduction to Data Science and Big Data",
    "Units":"3",
    "Description":"Techniques for data preparation, exploratory analysis, statistical modeling, machine learning and visualization. Methods for analyzing different types of data, such as natural language and time-series, from emerging applications, including Internet-of-Things. Big data platforms. Projects with real-world data. Prerequisites: CPSC 131, MATH 338. Typically Offered: Fall\/Spring\/Summer",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Bach Ho",
    "Course":"CPSC 315",
    "Total Students":64,
    "A":25,
    "B":34,
    "C":4,
    "D":1,
    "F":0,
    "Avg GPA":3.3,
    "A-F Average":3.3,
    "A-F Median":3.15,
    "A-F Mode":3.0,
    "A-F Standard Deviation":0.56,
    "Rating":null,
    "Difficulty":null,
    "Would Take Again %":null,
    "Course Name":"Professional Ethics in Computing",
    "Units":"3",
    "Description":"Ethics and moral philosophy as applied to software and digital artifacts. Notions of rights, responsibilities, property, ownership, privacy, security, and professional ethics. Security obligations. Intellectual propertystatutes, licenses, and their terms. Oral and written reports are required. Prerequisites: CPSC 131; Computer Science or Computer Engineering major or minor; or Computer Science or Computer Engineering graduate standing. Typically Offered: Fall\/Spring",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Beth Harnick-Shapiro",
    "Course":"CPSC 315",
    "Total Students":38,
    "A":6,
    "B":24,
    "C":8,
    "D":0,
    "F":0,
    "Avg GPA":2.95,
    "A-F Average":2.95,
    "A-F Median":3.0,
    "A-F Mode":3.0,
    "A-F Standard Deviation":0.61,
    "Rating":3.2,
    "Difficulty":3.7,
    "Would Take Again %":52.381,
    "Course Name":"Professional Ethics in Computing",
    "Units":"3",
    "Description":"Ethics and moral philosophy as applied to software and digital artifacts. Notions of rights, responsibilities, property, ownership, privacy, security, and professional ethics. Security obligations. Intellectual propertystatutes, licenses, and their terms. Oral and written reports are required. Prerequisites: CPSC 131; Computer Science or Computer Engineering major or minor; or Computer Science or Computer Engineering graduate standing. Typically Offered: Fall\/Spring",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Bijan Hamidi",
    "Course":"CPSC 223J",
    "Total Students":71,
    "A":30,
    "B":26,
    "C":12,
    "D":1,
    "F":2,
    "Avg GPA":3.14,
    "A-F Average":3.14,
    "A-F Median":3.5,
    "A-F Mode":3.5,
    "A-F Standard Deviation":0.96,
    "Rating":null,
    "Difficulty":null,
    "Would Take Again %":null,
    "Course Name":"Java Programming",
    "Units":"3",
    "Description":"Characteristics of Java: portable, robust, secure, object-oriented, high performance; using the Java environment; server administration; types, expressions and control flow; classes, interfaces and packages; threads; exceptions; class libraries; Java for the Internet; tools, the Java Virtual machine. (2 hours lecture, 2 hours lab per week) Typically Offered: Fall\/Spring",
    "Prerequisite":"CPSC 131.",
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Charlene Keeler",
    "Course":"CPSC 311",
    "Total Students":25,
    "A":2,
    "B":19,
    "C":3,
    "D":0,
    "F":1,
    "Avg GPA":2.83,
    "A-F Average":2.83,
    "A-F Median":3.0,
    "A-F Mode":3.0,
    "A-F Standard Deviation":0.73,
    "Rating":null,
    "Difficulty":null,
    "Would Take Again %":null,
    "Course Name":null,
    "Units":null,
    "Description":null,
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":null
  },
  {
    "First Last":"Charles Siska",
    "Course":"CPSC 362",
    "Total Students":44,
    "A":13,
    "B":13,
    "C":14,
    "D":3,
    "F":1,
    "Avg GPA":2.77,
    "A-F Average":2.77,
    "A-F Median":3.0,
    "A-F Mode":2.0,
    "A-F Standard Deviation":1.03,
    "Rating":null,
    "Difficulty":null,
    "Would Take Again %":null,
    "Course Name":"Foundations of Software Engineering",
    "Units":"3",
    "Description":"Basic concepts, principles, methods, techniques and practices of software engineering. All aspects of the software engineering fields. Use Computer-Aided Software Engineering (CASE) tools. Prerequisites: CPSC 131; Computer Science or Computer Engineering major or minor; or Computer Science or Computer Engineering graduate standing. Typically Offered: Fall\/Spring\/Summer",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"David Falconer",
    "Course":"CPSC 311",
    "Total Students":34,
    "A":13,
    "B":14,
    "C":6,
    "D":0,
    "F":1,
    "Avg GPA":3.11,
    "A-F Average":3.11,
    "A-F Median":3.0,
    "A-F Mode":null,
    "A-F Standard Deviation":0.92,
    "Rating":null,
    "Difficulty":null,
    "Would Take Again %":null,
    "Course Name":null,
    "Units":null,
    "Description":null,
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":null
  },
  {
    "First Last":"David Heckathorn",
    "Course":"CPSC 254",
    "Total Students":45,
    "A":34,
    "B":10,
    "C":0,
    "D":0,
    "F":1,
    "Avg GPA":3.69,
    "A-F Average":3.69,
    "A-F Median":4.0,
    "A-F Mode":4.0,
    "A-F Standard Deviation":0.7,
    "Rating":4.7,
    "Difficulty":1.1,
    "Would Take Again %":96.7742,
    "Course Name":"Software Development with Open Source Systems",
    "Units":"3",
    "Description":"Philosophy of open source software development, open source operating systems such as Linux; open source development tools; open source programming languages, such as Python; open source software development processes; open source software licensing issues. (2 hours lecture, 2 hours laboratory) Prerequisites: CPSC 131; Computer Science or Computer Engineering major or minor. Typically Offered: Fall\/Spring",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"David Heckathorn",
    "Course":"CPSC 332",
    "Total Students":38,
    "A":18,
    "B":16,
    "C":2,
    "D":2,
    "F":0,
    "Avg GPA":3.25,
    "A-F Average":3.25,
    "A-F Median":3.3,
    "A-F Mode":3.7,
    "A-F Standard Deviation":0.74,
    "Rating":4.7,
    "Difficulty":1.1,
    "Would Take Again %":96.7742,
    "Course Name":"File Structures and Database Systems",
    "Units":"3",
    "Description":"Fundamental theories and design of database systems, the Structured Query Language (SQL), basic concepts and techniques of data organization in secondary storage. Topics include introduction to database systems, ER model, relational model, index structures and hashing techniques. Prerequisites: CPSC 131; Computer Science or Computer Engineering major or minor; or Computer Science or Computer Engineering graduate standing. Typically Offered: Fall\/Spring\/Summer",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"David Heckathorn",
    "Course":"CPSC 351",
    "Total Students":46,
    "A":26,
    "B":14,
    "C":5,
    "D":1,
    "F":0,
    "Avg GPA":3.33,
    "A-F Average":3.33,
    "A-F Median":3.7,
    "A-F Mode":4.0,
    "A-F Standard Deviation":0.73,
    "Rating":4.7,
    "Difficulty":1.1,
    "Would Take Again %":96.7742,
    "Course Name":"Operating Systems Concepts",
    "Units":"3",
    "Description":"Resource management, memory organization, input\/output, control process synchronization and other concepts as related to the objectives of multi-user operating systems. Typically Offered: Fall\/Spring\/Summer",
    "Prerequisite":"CPSC 131,\u00a0CPSC 240;\u00a0or Computer Science or Computer Engineering graduate standing.",
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"David McLaren",
    "Course":"CPSC 131",
    "Total Students":23,
    "A":5,
    "B":11,
    "C":2,
    "D":0,
    "F":5,
    "Avg GPA":2.48,
    "A-F Average":2.48,
    "A-F Median":3.0,
    "A-F Mode":3.0,
    "A-F Standard Deviation":1.44,
    "Rating":null,
    "Difficulty":null,
    "Would Take Again %":null,
    "Course Name":"Data Structures",
    "Units":"3",
    "Description":"Classical data structures: vector, linked list, stack, queue, binary search tree, and graph representations. Worst-case analysis, amortized analysis, and big-O notation. Object-oriented and recursive implementation of data structures. Self-resizing vectors and self-balancing trees. Empirical performance measurement. Typically Offered: Fall\/Spring",
    "Prerequisite":"CPSC 121\u00a0or sufficient score on the Computer Science Placement Exam.",
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Doina Bein",
    "Course":"CPSC 335",
    "Total Students":38,
    "A":26,
    "B":7,
    "C":4,
    "D":0,
    "F":1,
    "Avg GPA":3.41,
    "A-F Average":3.41,
    "A-F Median":3.7,
    "A-F Mode":4.0,
    "A-F Standard Deviation":0.88,
    "Rating":4.3,
    "Difficulty":3.5,
    "Would Take Again %":72.4138,
    "Course Name":"Algorithm Engineering",
    "Units":"3",
    "Description":"Algorithm design using classical patterns: exhaustive search, divide and conquer, randomization, hashing, reduction, dynamic programming, and the greedy method. Asymptotic and experimental efficiency analysis. NP-completeness and decidability. Implementing algorithms to solve practical problems. Prerequisites: CPSC 131, MATH 170A, MATH 150A;\u00a0Computer Science or Computer Engineering major or minor; or Computer Science or Computer Engineering graduate standing. Typically Offered: Fall\/Spring\/Summer",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Doina Bein",
    "Course":"CPSC 439",
    "Total Students":34,
    "A":16,
    "B":16,
    "C":2,
    "D":0,
    "F":0,
    "Avg GPA":3.29,
    "A-F Average":3.29,
    "A-F Median":3.3,
    "A-F Mode":3.7,
    "A-F Standard Deviation":0.56,
    "Rating":4.3,
    "Difficulty":3.5,
    "Would Take Again %":72.4138,
    "Course Name":"Theory of Computation",
    "Units":"3",
    "Description":"Introduction to the theory of computation. Automata theory; finite state machines, context free grammars, and Turing machines; hierarchy of formal language classes. Computability theory and undecidable problems. Time complexity; P and NP-complete problems. Applications to software design and security. Prerequisites: CPSC 121\u00a0or MATH 320; MATH 170B\u00a0or MATH 280; or Computer Science or Computer Engineering graduate standing. 400-level Undergraduate Course available for Graduate Credit Typically Offered: Fall\/Spring",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":null
  },
  {
    "First Last":"Doina Bein",
    "Course":"CPSC 474",
    "Total Students":29,
    "A":19,
    "B":8,
    "C":2,
    "D":0,
    "F":0,
    "Avg GPA":3.48,
    "A-F Average":3.48,
    "A-F Median":3.7,
    "A-F Mode":3.7,
    "A-F Standard Deviation":0.56,
    "Rating":4.3,
    "Difficulty":3.5,
    "Would Take Again %":72.4138,
    "Course Name":"Parallel and Distributed Computing",
    "Units":"3",
    "Description":"Concepts of distributed computing; distributed memory and shared memory architectures; parallel programming techniques; inter-process communication and synchronization; programming for parallel architectures such as multi-core and GPU platforms; project involving distributed application development. Prerequisites: CPSC 351; Computer Science or Computer Engineering major or minor; or Computer Science or Computer Engineering graduate standing. 400-level Undergraduate Course available for Graduate Credit Typically Offered: Fall\/Spring",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":null
  },
  {
    "First Last":"Eric May",
    "Course":"CPSC 121",
    "Total Students":80,
    "A":14,
    "B":27,
    "C":15,
    "D":13,
    "F":11,
    "Avg GPA":2.25,
    "A-F Average":2.25,
    "A-F Median":2.5,
    "A-F Mode":3.0,
    "A-F Standard Deviation":1.29,
    "Rating":2.6,
    "Difficulty":3.3,
    "Would Take Again %":38.8889,
    "Course Name":"Object-Oriented Programming",
    "Units":"3",
    "Description":"The object-oriented programming paradigm: classes, member functions, interfaces, inheritance, polymorphism, and exceptions. Design practices including encapsulation, decoupling, and documentation. Pointers\/references and memory management. Recursion. (2 hours lecture, 2 hours activity)",
    "Prerequisite":"CPSC 120\u00a0or passing score on Computer Science Placement Exam.",
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Floyd Holliday",
    "Course":"CPSC 223N",
    "Total Students":15,
    "A":9,
    "B":2,
    "C":2,
    "D":2,
    "F":0,
    "Avg GPA":3.22,
    "A-F Average":3.22,
    "A-F Median":3.7,
    "A-F Mode":4.0,
    "A-F Standard Deviation":1.11,
    "Rating":3.6,
    "Difficulty":2.8,
    "Would Take Again %":66.6667,
    "Course Name":"Visual C# Programming",
    "Units":"3",
    "Description":"Characteristics of C#, object-oriented design concepts, control structures, methods, arrays, classes, objects, inheritance, polymorphism, exception handling, graphical user interfaces, multithreading, characters, strings, files, streams. Rudiments of the Unified Modeling Language Software development assignments. (2 hours lecture, 2 hours laboratory) Typically Offered: Fall\/Spring",
    "Prerequisite":"CPSC 131.",
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Floyd Holliday",
    "Course":"CPSC 253U",
    "Total Students":29,
    "A":11,
    "B":3,
    "C":12,
    "D":2,
    "F":1,
    "Avg GPA":2.73,
    "A-F Average":2.73,
    "A-F Median":2.3,
    "A-F Mode":4.0,
    "A-F Standard Deviation":1.17,
    "Rating":3.6,
    "Difficulty":2.8,
    "Would Take Again %":66.6667,
    "Course Name":null,
    "Units":null,
    "Description":null,
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":null
  },
  {
    "First Last":"Floyd Holliday",
    "Course":"CPSC 254",
    "Total Students":28,
    "A":7,
    "B":5,
    "C":6,
    "D":6,
    "F":4,
    "Avg GPA":2.08,
    "A-F Average":2.08,
    "A-F Median":2.0,
    "A-F Mode":4.0,
    "A-F Standard Deviation":1.4,
    "Rating":3.6,
    "Difficulty":2.8,
    "Would Take Again %":66.6667,
    "Course Name":"Software Development with Open Source Systems",
    "Units":"3",
    "Description":"Philosophy of open source software development, open source operating systems such as Linux; open source development tools; open source programming languages, such as Python; open source software development processes; open source software licensing issues. (2 hours lecture, 2 hours laboratory) Prerequisites: CPSC 131; Computer Science or Computer Engineering major or minor. Typically Offered: Fall\/Spring",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Hernan Manabat",
    "Course":"CPSC 456",
    "Total Students":46,
    "A":15,
    "B":27,
    "C":4,
    "D":0,
    "F":0,
    "Avg GPA":3.2,
    "A-F Average":3.2,
    "A-F Median":3.0,
    "A-F Mode":3.0,
    "A-F Standard Deviation":0.55,
    "Rating":null,
    "Difficulty":null,
    "Would Take Again %":null,
    "Course Name":"Network Security Fundamentals",
    "Units":"3",
    "Description":"Learn about vulnerabilities of network protocols, attacks targeting confidentiality, integrity and availability of data transmitted across networks, and methods for diagnosing and closing security gaps through hands-on exercises. Prerequisites: CPSC 351; Computer Science or Computer Engineering major or minor; or Computer Science or Computer Engineering graduate standing. 400-level Undergraduate Course available for Graduate Credit Typically Offered: Fall\/Spring",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":null
  },
  {
    "First Last":"John Oates",
    "Course":"CPSC 351",
    "Total Students":30,
    "A":11,
    "B":16,
    "C":3,
    "D":0,
    "F":0,
    "Avg GPA":3.1,
    "A-F Average":3.1,
    "A-F Median":3.0,
    "A-F Mode":null,
    "A-F Standard Deviation":0.62,
    "Rating":4.6,
    "Difficulty":2.4,
    "Would Take Again %":100.0,
    "Course Name":"Operating Systems Concepts",
    "Units":"3",
    "Description":"Resource management, memory organization, input\/output, control process synchronization and other concepts as related to the objectives of multi-user operating systems. Typically Offered: Fall\/Spring\/Summer",
    "Prerequisite":"CPSC 131,\u00a0CPSC 240;\u00a0or Computer Science or Computer Engineering graduate standing.",
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Joseph Martinazzi",
    "Course":"CPSC 313",
    "Total Students":90,
    "A":44,
    "B":30,
    "C":15,
    "D":0,
    "F":1,
    "Avg GPA":3.29,
    "A-F Average":3.29,
    "A-F Median":3.25,
    "A-F Mode":4.0,
    "A-F Standard Deviation":0.82,
    "Rating":null,
    "Difficulty":null,
    "Would Take Again %":null,
    "Course Name":null,
    "Units":null,
    "Description":null,
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":null
  },
  {
    "First Last":"Justin Okun",
    "Course":"CPSC 351",
    "Total Students":27,
    "A":7,
    "B":6,
    "C":9,
    "D":1,
    "F":4,
    "Avg GPA":2.41,
    "A-F Average":2.41,
    "A-F Median":2.0,
    "A-F Mode":2.0,
    "A-F Standard Deviation":1.34,
    "Rating":null,
    "Difficulty":null,
    "Would Take Again %":null,
    "Course Name":"Operating Systems Concepts",
    "Units":"3",
    "Description":"Resource management, memory organization, input\/output, control process synchronization and other concepts as related to the objectives of multi-user operating systems. Typically Offered: Fall\/Spring\/Summer",
    "Prerequisite":"CPSC 131,\u00a0CPSC 240;\u00a0or Computer Science or Computer Engineering graduate standing.",
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Kenneth Kung",
    "Course":"CPSC 440",
    "Total Students":49,
    "A":13,
    "B":16,
    "C":19,
    "D":1,
    "F":0,
    "Avg GPA":2.84,
    "A-F Average":2.84,
    "A-F Median":3.0,
    "A-F Mode":2.0,
    "A-F Standard Deviation":0.85,
    "Rating":null,
    "Difficulty":null,
    "Would Take Again %":null,
    "Course Name":"Computer System Architecture",
    "Units":"3",
    "Description":"Computer performance, price\/performance, instruction set design and examples. Processor design, pipelining, memory hierarchy design and input\/output subsystems. Prerequisites: CPSC 240; Computer Science or Computer Engineering major or minor; or Computer Science or Computer Engineering graduate standing. 400-level Undergraduate Course available for Graduate Credit Typically Offered: Fall\/Spring",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":null
  },
  {
    "First Last":"Kenytt Avery",
    "Course":"CPSC 353",
    "Total Students":38,
    "A":9,
    "B":13,
    "C":13,
    "D":2,
    "F":1,
    "Avg GPA":2.71,
    "A-F Average":2.71,
    "A-F Median":3.0,
    "A-F Mode":null,
    "A-F Standard Deviation":0.98,
    "Rating":3.5,
    "Difficulty":4.0,
    "Would Take Again %":56.8182,
    "Course Name":null,
    "Units":null,
    "Description":null,
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":null
  },
  {
    "First Last":"Kenytt Avery",
    "Course":"CPSC 411",
    "Total Students":59,
    "A":32,
    "B":24,
    "C":0,
    "D":2,
    "F":1,
    "Avg GPA":3.37,
    "A-F Average":3.37,
    "A-F Median":3.5,
    "A-F Mode":3.5,
    "A-F Standard Deviation":0.73,
    "Rating":3.5,
    "Difficulty":4.0,
    "Would Take Again %":56.8182,
    "Course Name":"Mobile Device Application Programming",
    "Units":"3",
    "Description":"Introduction to developing applications for mobile devices, including but not limited to runtime environments, development tools and debugging tools used in creating applications for mobile devices. Use emulators in lab. Students must provide their own mobile devices. 400-level Undergraduate Course available for Graduate Credit Typically Offered: Fall\/Spring\/Summer",
    "Prerequisite":"CPSC 131\u00a0or Computer Science or Computer Engineering graduate standing.",
    "Corequisite":null,
    "Graduate Eligibility":null
  },
  {
    "First Last":"Kenytt Avery",
    "Course":"CPSC 471",
    "Total Students":47,
    "A":14,
    "B":20,
    "C":7,
    "D":1,
    "F":5,
    "Avg GPA":2.79,
    "A-F Average":2.79,
    "A-F Median":3.0,
    "A-F Mode":3.0,
    "A-F Standard Deviation":1.21,
    "Rating":3.5,
    "Difficulty":4.0,
    "Would Take Again %":56.8182,
    "Course Name":"Computer Communications",
    "Units":"3",
    "Description":"Introduction to digital data communications. Terminology, networks and their components, common-carrier services, telecommunication facilities, terminals, error control, multiplexing and concentration techniques. Prerequisites: CPSC 351; Computer Science or Computer Engineering major or minor; or Computer Science or Computer Engineering graduate standing. 400-level Undergraduate Course available for Graduate Credit Typically Offered: Fall\/Spring\/Summer",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":null
  },
  {
    "First Last":"Kenytt Avery",
    "Course":"CPSC 476",
    "Total Students":26,
    "A":8,
    "B":11,
    "C":6,
    "D":0,
    "F":1,
    "Avg GPA":2.96,
    "A-F Average":2.96,
    "A-F Median":3.0,
    "A-F Mode":3.0,
    "A-F Standard Deviation":0.96,
    "Rating":3.5,
    "Difficulty":4.0,
    "Would Take Again %":56.8182,
    "Course Name":null,
    "Units":null,
    "Description":null,
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":null
  },
  {
    "First Last":"Kevin Wortman",
    "Course":"CPSC 305",
    "Total Students":29,
    "A":17,
    "B":6,
    "C":6,
    "D":0,
    "F":0,
    "Avg GPA":3.38,
    "A-F Average":3.38,
    "A-F Median":4.0,
    "A-F Mode":4.0,
    "A-F Standard Deviation":0.82,
    "Rating":4.1,
    "Difficulty":3.2,
    "Would Take Again %":70.5882,
    "Course Name":null,
    "Units":null,
    "Description":null,
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":null
  },
  {
    "First Last":"Kevin Wortman",
    "Course":"CPSC 335",
    "Total Students":72,
    "A":13,
    "B":29,
    "C":23,
    "D":6,
    "F":1,
    "Avg GPA":2.64,
    "A-F Average":2.64,
    "A-F Median":3.0,
    "A-F Mode":2.5,
    "A-F Standard Deviation":0.9,
    "Rating":4.1,
    "Difficulty":3.2,
    "Would Take Again %":70.5882,
    "Course Name":"Algorithm Engineering",
    "Units":"3",
    "Description":"Algorithm design using classical patterns: exhaustive search, divide and conquer, randomization, hashing, reduction, dynamic programming, and the greedy method. Asymptotic and experimental efficiency analysis. NP-completeness and decidability. Implementing algorithms to solve practical problems. Prerequisites: CPSC 131, MATH 170A, MATH 150A;\u00a0Computer Science or Computer Engineering major or minor; or Computer Science or Computer Engineering graduate standing. Typically Offered: Fall\/Spring\/Summer",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Laurence Bernstein",
    "Course":"CPSC 335",
    "Total Students":25,
    "A":5,
    "B":10,
    "C":8,
    "D":0,
    "F":2,
    "Avg GPA":2.64,
    "A-F Average":2.64,
    "A-F Median":3.0,
    "A-F Mode":2.0,
    "A-F Standard Deviation":1.08,
    "Rating":null,
    "Difficulty":null,
    "Would Take Again %":null,
    "Course Name":"Algorithm Engineering",
    "Units":"3",
    "Description":"Algorithm design using classical patterns: exhaustive search, divide and conquer, randomization, hashing, reduction, dynamic programming, and the greedy method. Asymptotic and experimental efficiency analysis. NP-completeness and decidability. Implementing algorithms to solve practical problems. Prerequisites: CPSC 131, MATH 170A, MATH 150A;\u00a0Computer Science or Computer Engineering major or minor; or Computer Science or Computer Engineering graduate standing. Typically Offered: Fall\/Spring\/Summer",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Lidia Morrison",
    "Course":"CPSC 362",
    "Total Students":32,
    "A":7,
    "B":25,
    "C":0,
    "D":0,
    "F":0,
    "Avg GPA":3.29,
    "A-F Average":3.29,
    "A-F Median":3.3,
    "A-F Mode":3.0,
    "A-F Standard Deviation":0.36,
    "Rating":3.6,
    "Difficulty":1.5,
    "Would Take Again %":76.9231,
    "Course Name":"Foundations of Software Engineering",
    "Units":"3",
    "Description":"Basic concepts, principles, methods, techniques and practices of software engineering. All aspects of the software engineering fields. Use Computer-Aided Software Engineering (CASE) tools. Prerequisites: CPSC 131; Computer Science or Computer Engineering major or minor; or Computer Science or Computer Engineering graduate standing. Typically Offered: Fall\/Spring\/Summer",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Lidia Morrison",
    "Course":"CPSC 463",
    "Total Students":32,
    "A":4,
    "B":28,
    "C":0,
    "D":0,
    "F":0,
    "Avg GPA":3.23,
    "A-F Average":3.23,
    "A-F Median":3.0,
    "A-F Mode":3.0,
    "A-F Standard Deviation":0.33,
    "Rating":3.6,
    "Difficulty":1.5,
    "Would Take Again %":76.9231,
    "Course Name":"Software Testing",
    "Units":"3",
    "Description":"Software testing techniques, reporting problems effectively and planning testing projects. Students apply what they learned throughout the course to a sample application that is either commercially available or under development. Prerequisites: CPSC 362; Computer Science or Computer Engineering major or minor; or Computer Science or Computer Engineering graduate standing. 400-level Undergraduate Course available for Graduate Credit Typically Offered: Fall\/Spring",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":null
  },
  {
    "First Last":"Mehdi Peiravi",
    "Course":"CPSC 120",
    "Total Students":109,
    "A":15,
    "B":27,
    "C":27,
    "D":17,
    "F":23,
    "Avg GPA":1.96,
    "A-F Average":1.96,
    "A-F Median":2.11,
    "A-F Mode":0.0,
    "A-F Standard Deviation":1.34,
    "Rating":3.2,
    "Difficulty":2.4,
    "Would Take Again %":63.4146,
    "Course Name":"Introduction to Programming",
    "Units":"3",
    "Description":"Introduction to the concepts underlying all computer programming: design and execution of programs; sequential nature of programs; use of assignment, control and input\/output statements to accomplish desired tasks; design and use of functions. Structured and object-oriented methodologies. (1.5 hours lecture, 3 hours laboratory)",
    "Prerequisite":null,
    "Corequisite":"MATH 125.",
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Mehdi Peiravi",
    "Course":"CPSC 240",
    "Total Students":45,
    "A":8,
    "B":10,
    "C":9,
    "D":10,
    "F":8,
    "Avg GPA":2.01,
    "A-F Average":2.01,
    "A-F Median":2.0,
    "A-F Mode":0.0,
    "A-F Standard Deviation":1.35,
    "Rating":3.2,
    "Difficulty":2.4,
    "Would Take Again %":63.4146,
    "Course Name":"Computer Organization and Assembly Language",
    "Units":"3",
    "Description":"Digital logic and architecture of a computer system, machine level representation of data, memory system organization, structure of low-level computer languages. Machine, assembly, and macro language programming. Principles of assembler operation, input-output programming, interrupt\/exception handling. Laboratory programming assignments. (2 hours lecture, 2 hours laboratory) Prerequisites: CPSC 131; MATH 170A\u00a0or MATH 280; or graduate standing. Typically Offered: Fall\/Spring",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Michael Falkow",
    "Course":"CPSC 120",
    "Total Students":92,
    "A":23,
    "B":36,
    "C":18,
    "D":9,
    "F":6,
    "Avg GPA":2.6,
    "A-F Average":2.6,
    "A-F Median":2.9,
    "A-F Mode":2.9,
    "A-F Standard Deviation":1.13,
    "Rating":4.9,
    "Difficulty":2.9,
    "Would Take Again %":98.4375,
    "Course Name":"Introduction to Programming",
    "Units":"3",
    "Description":"Introduction to the concepts underlying all computer programming: design and execution of programs; sequential nature of programs; use of assignment, control and input\/output statements to accomplish desired tasks; design and use of functions. Structured and object-oriented methodologies. (1.5 hours lecture, 3 hours laboratory)",
    "Prerequisite":null,
    "Corequisite":"MATH 125.",
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Michael Marcinkevicz",
    "Course":"CPSC 471",
    "Total Students":38,
    "A":37,
    "B":0,
    "C":1,
    "D":0,
    "F":0,
    "Avg GPA":3.94,
    "A-F Average":3.94,
    "A-F Median":4.0,
    "A-F Mode":4.0,
    "A-F Standard Deviation":0.33,
    "Rating":null,
    "Difficulty":null,
    "Would Take Again %":null,
    "Course Name":"Computer Communications",
    "Units":"3",
    "Description":"Introduction to digital data communications. Terminology, networks and their components, common-carrier services, telecommunication facilities, terminals, error control, multiplexing and concentration techniques. Prerequisites: CPSC 351; Computer Science or Computer Engineering major or minor; or Computer Science or Computer Engineering graduate standing. 400-level Undergraduate Course available for Graduate Credit Typically Offered: Fall\/Spring\/Summer",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":null
  },
  {
    "First Last":"Mikhail Gofman",
    "Course":"CPSC 351",
    "Total Students":32,
    "A":5,
    "B":15,
    "C":10,
    "D":1,
    "F":1,
    "Avg GPA":2.66,
    "A-F Average":2.66,
    "A-F Median":2.85,
    "A-F Mode":3.0,
    "A-F Standard Deviation":0.87,
    "Rating":4.6,
    "Difficulty":3.5,
    "Would Take Again %":77.2727,
    "Course Name":"Operating Systems Concepts",
    "Units":"3",
    "Description":"Resource management, memory organization, input\/output, control process synchronization and other concepts as related to the objectives of multi-user operating systems. Typically Offered: Fall\/Spring\/Summer",
    "Prerequisite":"CPSC 131,\u00a0CPSC 240;\u00a0or Computer Science or Computer Engineering graduate standing.",
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Mikhail Gofman",
    "Course":"CPSC 458",
    "Total Students":45,
    "A":10,
    "B":22,
    "C":9,
    "D":2,
    "F":2,
    "Avg GPA":2.79,
    "A-F Average":2.79,
    "A-F Median":3.0,
    "A-F Mode":null,
    "A-F Standard Deviation":0.98,
    "Rating":4.6,
    "Difficulty":3.5,
    "Would Take Again %":77.2727,
    "Course Name":"Malware Analysis",
    "Units":"3",
    "Description":"Introduction to principles and practices of malware analysis. Topics include static and dynamic code analysis, data decoding, analysis tools, debugging, shellcode analysis, reverse engineering of stealthy malware and written presentation of analysis results. 400-level Undergraduate Course available for Graduate Credit Typically Offered: Fall\/Spring",
    "Prerequisite":"CPSC 351\u00a0or Computer Science or Computer Engineering graduate standing.",
    "Corequisite":null,
    "Graduate Eligibility":null
  },
  {
    "First Last":"Mohamadreza Ahmadnia",
    "Course":"CPSC 120",
    "Total Students":31,
    "A":16,
    "B":8,
    "C":2,
    "D":2,
    "F":3,
    "Avg GPA":3.07,
    "A-F Average":3.07,
    "A-F Median":3.7,
    "A-F Mode":4.0,
    "A-F Standard Deviation":1.31,
    "Rating":null,
    "Difficulty":null,
    "Would Take Again %":null,
    "Course Name":"Introduction to Programming",
    "Units":"3",
    "Description":"Introduction to the concepts underlying all computer programming: design and execution of programs; sequential nature of programs; use of assignment, control and input\/output statements to accomplish desired tasks; design and use of functions. Structured and object-oriented methodologies. (1.5 hours lecture, 3 hours laboratory)",
    "Prerequisite":null,
    "Corequisite":"MATH 125.",
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Mohamadreza Ahmadnia",
    "Course":"CPSC 240",
    "Total Students":78,
    "A":29,
    "B":35,
    "C":11,
    "D":3,
    "F":0,
    "Avg GPA":3.08,
    "A-F Average":3.08,
    "A-F Median":3.08,
    "A-F Mode":3.85,
    "A-F Standard Deviation":0.77,
    "Rating":null,
    "Difficulty":null,
    "Would Take Again %":null,
    "Course Name":"Computer Organization and Assembly Language",
    "Units":"3",
    "Description":"Digital logic and architecture of a computer system, machine level representation of data, memory system organization, structure of low-level computer languages. Machine, assembly, and macro language programming. Principles of assembler operation, input-output programming, interrupt\/exception handling. Laboratory programming assignments. (2 hours lecture, 2 hours laboratory) Prerequisites: CPSC 131; MATH 170A\u00a0or MATH 280; or graduate standing. Typically Offered: Fall\/Spring",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Mohamadreza Ahmadnia",
    "Course":"CPSC 323",
    "Total Students":37,
    "A":6,
    "B":13,
    "C":18,
    "D":0,
    "F":0,
    "Avg GPA":2.55,
    "A-F Average":2.55,
    "A-F Median":2.7,
    "A-F Mode":1.7,
    "A-F Standard Deviation":0.8,
    "Rating":null,
    "Difficulty":null,
    "Would Take Again %":null,
    "Course Name":"Compilers and Languages",
    "Units":"3",
    "Description":"Basic concepts of programming languages and principles of translation. Topics include history of programming languages, various programming paradigms, language design issues and criteria, design of compilers for modern programming languages. Prerequisites: CPSC 131; Computer Science or Computer Engineering major or minor; or Computer Science or Computer Engineering graduate standing. Typically Offered: Fall\/Spring\/Summer",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Natalia Anderson",
    "Course":"CPSC 121",
    "Total Students":14,
    "A":5,
    "B":4,
    "C":3,
    "D":2,
    "F":0,
    "Avg GPA":2.67,
    "A-F Average":2.67,
    "A-F Median":3.0,
    "A-F Mode":4.0,
    "A-F Standard Deviation":1.1,
    "Rating":null,
    "Difficulty":null,
    "Would Take Again %":null,
    "Course Name":"Object-Oriented Programming",
    "Units":"3",
    "Description":"The object-oriented programming paradigm: classes, member functions, interfaces, inheritance, polymorphism, and exceptions. Design practices including encapsulation, decoupling, and documentation. Pointers\/references and memory management. Recursion. (2 hours lecture, 2 hours activity)",
    "Prerequisite":"CPSC 120\u00a0or passing score on Computer Science Placement Exam.",
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Ning Chen",
    "Course":"CPSC 440",
    "Total Students":61,
    "A":22,
    "B":36,
    "C":3,
    "D":0,
    "F":0,
    "Avg GPA":3.3,
    "A-F Average":3.3,
    "A-F Median":3.15,
    "A-F Mode":3.0,
    "A-F Standard Deviation":0.48,
    "Rating":3.0,
    "Difficulty":3.3,
    "Would Take Again %":37.037,
    "Course Name":"Computer System Architecture",
    "Units":"3",
    "Description":"Computer performance, price\/performance, instruction set design and examples. Processor design, pipelining, memory hierarchy design and input\/output subsystems. Prerequisites: CPSC 240; Computer Science or Computer Engineering major or minor; or Computer Science or Computer Engineering graduate standing. 400-level Undergraduate Course available for Graduate Credit Typically Offered: Fall\/Spring",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":null
  },
  {
    "First Last":"Patricia Parral",
    "Course":"CPSC 311",
    "Total Students":63,
    "A":11,
    "B":38,
    "C":14,
    "D":0,
    "F":0,
    "Avg GPA":2.94,
    "A-F Average":2.94,
    "A-F Median":3.0,
    "A-F Mode":3.0,
    "A-F Standard Deviation":0.62,
    "Rating":null,
    "Difficulty":null,
    "Would Take Again %":null,
    "Course Name":null,
    "Units":null,
    "Description":null,
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":null
  },
  {
    "First Last":"PaulSalvador Inventado",
    "Course":"CPSC 121",
    "Total Students":55,
    "A":20,
    "B":7,
    "C":9,
    "D":2,
    "F":17,
    "Avg GPA":2.18,
    "A-F Average":2.18,
    "A-F Median":2.5,
    "A-F Mode":2.0,
    "A-F Standard Deviation":1.66,
    "Rating":null,
    "Difficulty":null,
    "Would Take Again %":null,
    "Course Name":"Object-Oriented Programming",
    "Units":"3",
    "Description":"The object-oriented programming paradigm: classes, member functions, interfaces, inheritance, polymorphism, and exceptions. Design practices including encapsulation, decoupling, and documentation. Pointers\/references and memory management. Recursion. (2 hours lecture, 2 hours activity)",
    "Prerequisite":"CPSC 120\u00a0or passing score on Computer Science Placement Exam.",
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Pouya Radfar",
    "Course":"CPSC 311",
    "Total Students":38,
    "A":25,
    "B":13,
    "C":0,
    "D":0,
    "F":0,
    "Avg GPA":3.66,
    "A-F Average":3.66,
    "A-F Median":4.0,
    "A-F Mode":4.0,
    "A-F Standard Deviation":0.48,
    "Rating":3.9,
    "Difficulty":2.3,
    "Would Take Again %":73.3333,
    "Course Name":null,
    "Units":null,
    "Description":null,
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":null
  },
  {
    "First Last":"Pouya Radfar",
    "Course":"CPSC 313",
    "Total Students":128,
    "A":44,
    "B":47,
    "C":26,
    "D":11,
    "F":0,
    "Avg GPA":2.88,
    "A-F Average":2.88,
    "A-F Median":3.0,
    "A-F Mode":3.5,
    "A-F Standard Deviation":0.95,
    "Rating":3.9,
    "Difficulty":2.3,
    "Would Take Again %":73.3333,
    "Course Name":null,
    "Units":null,
    "Description":null,
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":null
  },
  {
    "First Last":"Pouya Radfar",
    "Course":"CPSC 315",
    "Total Students":34,
    "A":25,
    "B":8,
    "C":1,
    "D":0,
    "F":0,
    "Avg GPA":3.71,
    "A-F Average":3.71,
    "A-F Median":4.0,
    "A-F Mode":4.0,
    "A-F Standard Deviation":0.52,
    "Rating":3.9,
    "Difficulty":2.3,
    "Would Take Again %":73.3333,
    "Course Name":"Professional Ethics in Computing",
    "Units":"3",
    "Description":"Ethics and moral philosophy as applied to software and digital artifacts. Notions of rights, responsibilities, property, ownership, privacy, security, and professional ethics. Security obligations. Intellectual propertystatutes, licenses, and their terms. Oral and written reports are required. Prerequisites: CPSC 131; Computer Science or Computer Engineering major or minor; or Computer Science or Computer Engineering graduate standing. Typically Offered: Fall\/Spring",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Sara Ghadami",
    "Course":"CPSC 120",
    "Total Students":54,
    "A":14,
    "B":25,
    "C":13,
    "D":2,
    "F":0,
    "Avg GPA":2.95,
    "A-F Average":2.95,
    "A-F Median":3.0,
    "A-F Mode":3.35,
    "A-F Standard Deviation":0.74,
    "Rating":null,
    "Difficulty":null,
    "Would Take Again %":null,
    "Course Name":"Introduction to Programming",
    "Units":"3",
    "Description":"Introduction to the concepts underlying all computer programming: design and execution of programs; sequential nature of programs; use of assignment, control and input\/output statements to accomplish desired tasks; design and use of functions. Structured and object-oriented methodologies. (1.5 hours lecture, 3 hours laboratory)",
    "Prerequisite":null,
    "Corequisite":"MATH 125.",
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Sara Ghadami",
    "Course":"CPSC 313",
    "Total Students":88,
    "A":48,
    "B":31,
    "C":7,
    "D":0,
    "F":2,
    "Avg GPA":3.28,
    "A-F Average":3.28,
    "A-F Median":3.6,
    "A-F Mode":4.0,
    "A-F Standard Deviation":0.81,
    "Rating":null,
    "Difficulty":null,
    "Would Take Again %":null,
    "Course Name":null,
    "Units":null,
    "Description":null,
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":null
  },
  {
    "First Last":"Sara Ghadami",
    "Course":"CPSC 362",
    "Total Students":46,
    "A":11,
    "B":33,
    "C":2,
    "D":0,
    "F":0,
    "Avg GPA":3.24,
    "A-F Average":3.24,
    "A-F Median":3.3,
    "A-F Mode":null,
    "A-F Standard Deviation":0.42,
    "Rating":null,
    "Difficulty":null,
    "Would Take Again %":null,
    "Course Name":"Foundations of Software Engineering",
    "Units":"3",
    "Description":"Basic concepts, principles, methods, techniques and practices of software engineering. All aspects of the software engineering fields. Use Computer-Aided Software Engineering (CASE) tools. Prerequisites: CPSC 131; Computer Science or Computer Engineering major or minor; or Computer Science or Computer Engineering graduate standing. Typically Offered: Fall\/Spring\/Summer",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Sara Hariri",
    "Course":"CPSC 313",
    "Total Students":42,
    "A":20,
    "B":14,
    "C":5,
    "D":3,
    "F":0,
    "Avg GPA":3.14,
    "A-F Average":3.14,
    "A-F Median":3.0,
    "A-F Mode":4.0,
    "A-F Standard Deviation":0.92,
    "Rating":null,
    "Difficulty":null,
    "Would Take Again %":null,
    "Course Name":null,
    "Units":null,
    "Description":null,
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":null
  },
  {
    "First Last":"Shawn Wang",
    "Course":"CPSC 332",
    "Total Students":85,
    "A":17,
    "B":28,
    "C":37,
    "D":3,
    "F":0,
    "Avg GPA":2.72,
    "A-F Average":2.72,
    "A-F Median":2.75,
    "A-F Mode":2.0,
    "A-F Standard Deviation":0.82,
    "Rating":2.6,
    "Difficulty":3.3,
    "Would Take Again %":37.037,
    "Course Name":"File Structures and Database Systems",
    "Units":"3",
    "Description":"Fundamental theories and design of database systems, the Structured Query Language (SQL), basic concepts and techniques of data organization in secondary storage. Topics include introduction to database systems, ER model, relational model, index structures and hashing techniques. Prerequisites: CPSC 131; Computer Science or Computer Engineering major or minor; or Computer Science or Computer Engineering graduate standing. Typically Offered: Fall\/Spring\/Summer",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Shohrat Geldiyev",
    "Course":"CPSC 323",
    "Total Students":28,
    "A":5,
    "B":20,
    "C":2,
    "D":0,
    "F":1,
    "Avg GPA":2.9,
    "A-F Average":2.9,
    "A-F Median":3.0,
    "A-F Mode":2.7,
    "A-F Standard Deviation":0.73,
    "Rating":null,
    "Difficulty":null,
    "Would Take Again %":null,
    "Course Name":"Compilers and Languages",
    "Units":"3",
    "Description":"Basic concepts of programming languages and principles of translation. Topics include history of programming languages, various programming paradigms, language design issues and criteria, design of compilers for modern programming languages. Prerequisites: CPSC 131; Computer Science or Computer Engineering major or minor; or Computer Science or Computer Engineering graduate standing. Typically Offered: Fall\/Spring\/Summer",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Shohrat Geldiyev",
    "Course":"CPSC 332",
    "Total Students":33,
    "A":17,
    "B":11,
    "C":4,
    "D":0,
    "F":1,
    "Avg GPA":3.18,
    "A-F Average":3.18,
    "A-F Median":3.7,
    "A-F Mode":3.7,
    "A-F Standard Deviation":0.8,
    "Rating":null,
    "Difficulty":null,
    "Would Take Again %":null,
    "Course Name":"File Structures and Database Systems",
    "Units":"3",
    "Description":"Fundamental theories and design of database systems, the Structured Query Language (SQL), basic concepts and techniques of data organization in secondary storage. Topics include introduction to database systems, ER model, relational model, index structures and hashing techniques. Prerequisites: CPSC 131; Computer Science or Computer Engineering major or minor; or Computer Science or Computer Engineering graduate standing. Typically Offered: Fall\/Spring\/Summer",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Son Nguyen",
    "Course":"CPSC 464",
    "Total Students":29,
    "A":7,
    "B":21,
    "C":1,
    "D":0,
    "F":0,
    "Avg GPA":3.21,
    "A-F Average":3.21,
    "A-F Median":3.0,
    "A-F Mode":3.0,
    "A-F Standard Deviation":0.49,
    "Rating":4.1,
    "Difficulty":3.2,
    "Would Take Again %":81.8182,
    "Course Name":"Software Architecture",
    "Units":"3",
    "Description":"Basic principles and practices of software design and architecture. High-level design, software architecture, documenting software architecture, software and architecture evaluation, software product lines and some considerations beyond software architecture. Prerequisites: CPSC 362; Computer Science or Computer Engineering major or minor; or Computer Science or Computer Engineering graduate standing. 400-level Undergraduate Course available for Graduate Credit Typically Offered: Fall\/Spring",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":null
  },
  {
    "First Last":"Song Choi",
    "Course":"CPSC 323",
    "Total Students":62,
    "A":12,
    "B":26,
    "C":24,
    "D":0,
    "F":0,
    "Avg GPA":2.81,
    "A-F Average":2.81,
    "A-F Median":2.8,
    "A-F Mode":2.65,
    "A-F Standard Deviation":0.7,
    "Rating":null,
    "Difficulty":null,
    "Would Take Again %":null,
    "Course Name":"Compilers and Languages",
    "Units":"3",
    "Description":"Basic concepts of programming languages and principles of translation. Topics include history of programming languages, various programming paradigms, language design issues and criteria, design of compilers for modern programming languages. Prerequisites: CPSC 131; Computer Science or Computer Engineering major or minor; or Computer Science or Computer Engineering graduate standing. Typically Offered: Fall\/Spring\/Summer",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Stephen May",
    "Course":"CPSC 120",
    "Total Students":30,
    "A":8,
    "B":13,
    "C":6,
    "D":1,
    "F":2,
    "Avg GPA":2.8,
    "A-F Average":2.8,
    "A-F Median":3.0,
    "A-F Mode":null,
    "A-F Standard Deviation":1.11,
    "Rating":null,
    "Difficulty":null,
    "Would Take Again %":null,
    "Course Name":"Introduction to Programming",
    "Units":"3",
    "Description":"Introduction to the concepts underlying all computer programming: design and execution of programs; sequential nature of programs; use of assignment, control and input\/output statements to accomplish desired tasks; design and use of functions. Structured and object-oriented methodologies. (1.5 hours lecture, 3 hours laboratory)",
    "Prerequisite":null,
    "Corequisite":"MATH 125.",
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Steven Silverman",
    "Course":"CPSC 351",
    "Total Students":34,
    "A":27,
    "B":6,
    "C":0,
    "D":0,
    "F":1,
    "Avg GPA":3.72,
    "A-F Average":3.72,
    "A-F Median":4.0,
    "A-F Mode":4.0,
    "A-F Standard Deviation":0.76,
    "Rating":null,
    "Difficulty":null,
    "Would Take Again %":null,
    "Course Name":"Operating Systems Concepts",
    "Units":"3",
    "Description":"Resource management, memory organization, input\/output, control process synchronization and other concepts as related to the objectives of multi-user operating systems. Typically Offered: Fall\/Spring\/Summer",
    "Prerequisite":"CPSC 131,\u00a0CPSC 240;\u00a0or Computer Science or Computer Engineering graduate standing.",
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Steven Silverman",
    "Course":"CPSC 440",
    "Total Students":36,
    "A":35,
    "B":0,
    "C":0,
    "D":0,
    "F":1,
    "Avg GPA":3.89,
    "A-F Average":3.89,
    "A-F Median":4.0,
    "A-F Mode":4.0,
    "A-F Standard Deviation":0.67,
    "Rating":null,
    "Difficulty":null,
    "Would Take Again %":null,
    "Course Name":"Computer System Architecture",
    "Units":"3",
    "Description":"Computer performance, price\/performance, instruction set design and examples. Processor design, pipelining, memory hierarchy design and input\/output subsystems. Prerequisites: CPSC 240; Computer Science or Computer Engineering major or minor; or Computer Science or Computer Engineering graduate standing. 400-level Undergraduate Course available for Graduate Credit Typically Offered: Fall\/Spring",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":null
  },
  {
    "First Last":"Sylvan Shulman",
    "Course":"CPSC 240",
    "Total Students":32,
    "A":8,
    "B":10,
    "C":11,
    "D":1,
    "F":2,
    "Avg GPA":2.66,
    "A-F Average":2.66,
    "A-F Median":3.0,
    "A-F Mode":2.0,
    "A-F Standard Deviation":1.1,
    "Rating":null,
    "Difficulty":null,
    "Would Take Again %":null,
    "Course Name":"Computer Organization and Assembly Language",
    "Units":"3",
    "Description":"Digital logic and architecture of a computer system, machine level representation of data, memory system organization, structure of low-level computer languages. Machine, assembly, and macro language programming. Principles of assembler operation, input-output programming, interrupt\/exception handling. Laboratory programming assignments. (2 hours lecture, 2 hours laboratory) Prerequisites: CPSC 131; MATH 170A\u00a0or MATH 280; or graduate standing. Typically Offered: Fall\/Spring",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Thomas Bettens",
    "Course":"CPSC 120",
    "Total Students":58,
    "A":20,
    "B":18,
    "C":8,
    "D":2,
    "F":10,
    "Avg GPA":2.66,
    "A-F Average":2.66,
    "A-F Median":3.08,
    "A-F Mode":2.0,
    "A-F Standard Deviation":1.3,
    "Rating":2.4,
    "Difficulty":4.3,
    "Would Take Again %":31.8841,
    "Course Name":"Introduction to Programming",
    "Units":"3",
    "Description":"Introduction to the concepts underlying all computer programming: design and execution of programs; sequential nature of programs; use of assignment, control and input\/output statements to accomplish desired tasks; design and use of functions. Structured and object-oriented methodologies. (1.5 hours lecture, 3 hours laboratory)",
    "Prerequisite":null,
    "Corequisite":"MATH 125.",
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Thomas Bettens",
    "Course":"CPSC 462",
    "Total Students":63,
    "A":35,
    "B":25,
    "C":0,
    "D":2,
    "F":1,
    "Avg GPA":3.45,
    "A-F Average":3.45,
    "A-F Median":3.5,
    "A-F Mode":4.0,
    "A-F Standard Deviation":0.66,
    "Rating":2.4,
    "Difficulty":4.3,
    "Would Take Again %":31.8841,
    "Course Name":"Software Design",
    "Units":"3",
    "Description":"Concepts of software modeling, software process and some tools. Object-oriented analysis and design and Unified process. Some computer-aided software engineering (CASE) tools will be recommended to use for doing homework assignments. Prerequisites: CPSC 362; Computer Science or Computer Engineering major or minor; or Computer Science or Computer Engineering graduate standing. 400-level Undergraduate Course available for Graduate Credit Typically Offered: Fall\/Spring",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":null
  },
  {
    "First Last":"Tseng-Ching Shen",
    "Course":"CPSC 473",
    "Total Students":45,
    "A":25,
    "B":19,
    "C":1,
    "D":0,
    "F":0,
    "Avg GPA":3.48,
    "A-F Average":3.48,
    "A-F Median":3.7,
    "A-F Mode":4.0,
    "A-F Standard Deviation":0.54,
    "Rating":1.7,
    "Difficulty":4.2,
    "Would Take Again %":14.2857,
    "Course Name":null,
    "Units":null,
    "Description":null,
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":null
  },
  {
    "First Last":"William McCarthy",
    "Course":"CPSC 131",
    "Total Students":70,
    "A":15,
    "B":19,
    "C":12,
    "D":5,
    "F":19,
    "Avg GPA":2.08,
    "A-F Average":2.08,
    "A-F Median":2.5,
    "A-F Mode":null,
    "A-F Standard Deviation":1.52,
    "Rating":2.4,
    "Difficulty":3.8,
    "Would Take Again %":40.0,
    "Course Name":"Data Structures",
    "Units":"3",
    "Description":"Classical data structures: vector, linked list, stack, queue, binary search tree, and graph representations. Worst-case analysis, amortized analysis, and big-O notation. Object-oriented and recursive implementation of data structures. Self-resizing vectors and self-balancing trees. Empirical performance measurement. Typically Offered: Fall\/Spring",
    "Prerequisite":"CPSC 121\u00a0or sufficient score on the Computer Science Placement Exam.",
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"William McCarthy",
    "Course":"CPSC 386",
    "Total Students":60,
    "A":22,
    "B":32,
    "C":1,
    "D":0,
    "F":5,
    "Avg GPA":3.11,
    "A-F Average":3.11,
    "A-F Median":3.0,
    "A-F Mode":3.5,
    "A-F Standard Deviation":1.06,
    "Rating":2.4,
    "Difficulty":3.8,
    "Would Take Again %":40.0,
    "Course Name":"Introduction to Game Design and Production",
    "Units":"3",
    "Description":"Current and future technologies and market trends in game design and production. Game technologies, basic building tools for games and the process of game design, development and production. Prerequisites: CPSC 121; completion of G.E. Category B.4; or Computer Science or Computer Engineering graduate standing. Typically Offered: Fall\/Spring\/Summer",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":"Undergraduate Course not available for Graduate Credit"
  },
  {
    "First Last":"Yun Tian",
    "Course":"CPSC 454",
    "Total Students":60,
    "A":28,
    "B":30,
    "C":2,
    "D":0,
    "F":0,
    "Avg GPA":3.46,
    "A-F Average":3.46,
    "A-F Median":3.5,
    "A-F Mode":3.3,
    "A-F Standard Deviation":0.42,
    "Rating":1.7,
    "Difficulty":3.7,
    "Would Take Again %":16.2162,
    "Course Name":"Cloud Computing and Security",
    "Units":"3",
    "Description":"Cloud computing and cloud security, distributed computing, computer clusters, grid computing, virtual machines and virtualization, cloud computing platforms and deployment models, cloud programming and software environments, vulnerabilities and risks of cloud computing, cloud infrastructure protection, data privacy and protection. Prerequisites: CPSC 351, CPSC 253; Computer Science or Computer Engineering major or minor; or Computer Science or Computer Engineering graduate standing. 400-level Undergraduate Course available for Graduate Credit Typically Offered: Fall\/Spring",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":null
  },
  {
    "First Last":"Yun Tian",
    "Course":"CPSC 471",
    "Total Students":62,
    "A":18,
    "B":35,
    "C":9,
    "D":0,
    "F":0,
    "Avg GPA":3.18,
    "A-F Average":3.18,
    "A-F Median":3.15,
    "A-F Mode":null,
    "A-F Standard Deviation":0.57,
    "Rating":1.7,
    "Difficulty":3.7,
    "Would Take Again %":16.2162,
    "Course Name":"Computer Communications",
    "Units":"3",
    "Description":"Introduction to digital data communications. Terminology, networks and their components, common-carrier services, telecommunication facilities, terminals, error control, multiplexing and concentration techniques. Prerequisites: CPSC 351; Computer Science or Computer Engineering major or minor; or Computer Science or Computer Engineering graduate standing. 400-level Undergraduate Course available for Graduate Credit Typically Offered: Fall\/Spring\/Summer",
    "Prerequisite":null,
    "Corequisite":null,
    "Graduate Eligibility":null
  }
]